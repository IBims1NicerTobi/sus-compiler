
module replicatee #(T, int NUM_REPLS) {
	interface replicatee: T data -> T[NUM_REPLS] result

	for int i in 0..NUM_REPLS {
		result[i] = data
	} 
}

module use_replicatee {
	replicatee #(NUM_REPLS: 50, T: type bool) repl

	bool[50] repls = repl(true)
}

extern module TestExtern {
	input int in_a'3

	output int in_b'5
}

struct Matrix #(T, int WIDTH, int HEIGHT) {
	T[WIDTH][HEIGHT] data
}

struct float {}

module ModUsingFloat {
	input float beep

	output float boop

	boop = beep
}



module partialModule #(int UNKNOWN) {

}

module usePartialModule {
	partialModule m
}
